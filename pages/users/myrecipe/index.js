/* eslint-disable react-hooks/exhaustive-deps */
/* eslint-disable react-hooks/rules-of-hooks */
import React, { useEffect, useState } from 'react';
import Head from 'next/head';
import axios from '../../../helper/axios';
import Cookies from 'js-cookie';
import FormMyRecipe from '../../../components/organisms/FormMyRecipe';

/* export async function getServerSideProps() {
   try {
      const me = Cookies.get('user');
      console.log(me);
      const response = await axios({
         method: 'GET',
         url: `${API_URL}myrecipe/${me}`,
      });
      return {
         props: {
            data: response?.data?.data,
         },
      };
   } catch (err) {
      return {
         props: {
            data: err.message,
         },
      };
   }
} */

function myRecipe() {
   const id = Cookies.get('user');
   const [loading, setLoading] = useState(false);
   const [data, setData] = useState([]);

   useEffect(() => {
      getRecipe();
   }, [id]);

   const getRecipe = () => {
      setLoading(true);
      axios
         .get(`myrecipe/${id}`)
         .then((res) => {
            setData(res?.data?.data);
            setLoading(false);
         })
         .catch((err) => {
            err?.response;
            console.log(err?.response?.data?.message);
            setLoading(false);
         });
   };

   return (
      <>
         <Head>
            <title>Ricette mobile - My Recipe</title>
            <meta name="description" content="Generated by create next app" />
            <link rel="icon" href="/icon.png" />
         </Head>
         {loading ? <p>Loading</p> : <FormMyRecipe data={data} />}
      </>
   );
}

export default myRecipe;
